{"version":3,"sources":["contexts.js","utils.js","constants.js","components/Header/Header.js","components/Footer/Footer.js","components/utils/Post.js","WebAPI.js","pages/HomePage/HomePage.js","components/utils/Form.js","pages/LoginPage/LoginPage.js","pages/PostPage/PostPage.js","pages/RegisterPage/RegisterPage.js","pages/NewPostPage/NewPostPage.js","pages/ListPage/Paginator.js","pages/ListPage/ListPage.js","pages/AboutPage/AboutPage.js","pages/LoadingPage/LoadingPage.js","components/App.js","index.js"],"names":["AuthContext","createContext","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","blackDefault","grayLine","blueLink","HeaderContainer","styled","header","HeaderInnerContainer","div","LeftContainer","Brand","Link","NavbarList","Nav","NavLink","activeStyle","color","Header","useContext","user","setUser","location","useLocation","history","useHistory","to","onClick","pathname","push","FooterContainer","footer","Footer","href","PostContainer","PostTitle","PostDate","time","Post","post","title","createdAt","moment","format","id","BASE_URL","POST_SORT","POST_ORDER","getPosts","a","fetch","response","json","data","getListPosts","page","getPost","getUser","userId","register","userData","username","password","nickname","method","headers","body","JSON","stringify","login","getMe","ok","Error","newPost","HomePageContainer","YearContainer","Year","HomePage","setIsLoading","useState","posts","setPosts","years","setYears","useEffect","then","yearsArray","Date","getFullYear","Set","map","year","filter","Form","form","Input","input","Button","button","ErrorMessage","p","LoginPage","setUsername","setPassword","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","loginResponse","message","getMeResponse","onSubmit","htmlFor","value","onChange","target","required","type","Title","h2","Info","Author","span","Time","Content","main","PostPage","useParams","setPost","RegisterPage","setNickname","registerResponse","PostForm","TextArea","textarea","NewPostPage","setTitle","content","setContent","name","PaginatorContainer","Pagination","props","$active","ButtonContainer","Dots","Paginator","setPage","lastPage","pages","setPages","i","prev","ListPageContainer","PostsContainer","LoadingPageContainer","ListPage","setLastPage","isPaginationLoading","setPaginationIsLoading","Math","ceil","length","Container","Description","AboutPage","ReactLoadingContainer","LoadingPage","Root","App","isLoading","console","log","Provider","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1926e04f.chunk.js","sourcesContent":["import { createContext } from 'react'\r\n\r\nexport const AuthContext = createContext(null)","const TOKEN_NAME = 'token'\r\n\r\nexport const setAuthToken = (token) => localStorage.setItem(TOKEN_NAME, token)\r\nexport const getAuthToken = () => localStorage.getItem(TOKEN_NAME)","export const blackDefault = '#4A4A4A'\r\nexport const blackTitle = '#363636'\r\nexport const grayLine = '#dbdbdb'\r\nexport const blueLink = '#3273DC'","import styled from 'styled-components'\r\nimport { Link, NavLink, useHistory, useLocation } from 'react-router-dom'\r\nimport { useContext } from 'react'\r\nimport { AuthContext } from '../../contexts'\r\nimport { setAuthToken } from '../../utils'\r\nimport { blackDefault, blueLink, grayLine } from '../../constants'\r\n\r\nconst HeaderContainer = styled.header`\r\n  background: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  border-bottom: 1px solid ${grayLine};\r\n`\r\n\r\nconst HeaderInnerContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 50rem;\r\n  margin: 0 auto;\r\n`\r\n\r\nconst LeftContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Brand = styled(Link)`\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  color: ${blackDefault};\r\n  cursor: pointer;\r\n  padding: 0.5rem 1rem;\r\n  line-height: 1.5;\r\n\r\n  &:hover {\r\n    color: ${blueLink};\r\n  }\r\n`\r\n\r\nconst NavbarList = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Nav = styled(NavLink)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  font-size: 1.1rem;\r\n  color: ${blackDefault};\r\n  padding: 0.5rem 1rem;\r\n  line-height: 1.5;\r\n\r\n  &:hover {\r\n    color: ${blueLink};\r\n  }\r\n`\r\n\r\nconst activeStyle = {\r\n  color: blueLink\r\n}\r\n\r\nconst Header = () => {\r\n  const { user, setUser } = useContext(AuthContext)\r\n  const location = useLocation()\r\n  const history = useHistory()\r\n\r\n  const handleLogout = () => {\r\n    setAuthToken(null)\r\n    setUser(null)\r\n    if (location.pathname !== '/') {\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      <HeaderInnerContainer>\r\n        <LeftContainer>\r\n          <Brand to=\"/\">Large</Brand>\r\n          <NavbarList>\r\n            <Nav to=\"/list\" activeStyle={activeStyle}>文章列表</Nav>\r\n            {user && <Nav to=\"/new\" activeStyle={activeStyle}>發布文章</Nav>}\r\n            <Nav to=\"/about\" activeStyle={activeStyle}>About</Nav>\r\n          </NavbarList>\r\n        </LeftContainer>\r\n        <NavbarList>\r\n          {\r\n            user ?\r\n            <Nav to=\"/\" onClick={handleLogout}>登出</Nav> :\r\n            <>\r\n              <Nav to=\"/register\" activeStyle={activeStyle}>註冊</Nav>\r\n              <Nav to=\"/login\" activeStyle={activeStyle}>登入</Nav>\r\n            </>\r\n          }\r\n        </NavbarList>\r\n      </HeaderInnerContainer>\r\n    </HeaderContainer>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import styled from 'styled-components'\r\nimport { grayLine } from '../../constants';\r\n\r\nconst FooterContainer = styled.footer`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-top: 1px solid ${grayLine};\r\n  padding-top: 2rem;\r\n  margin: 5rem auto;\r\n  font-size: 0.9rem;\r\n  width: 50rem;\r\n`\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <FooterContainer>\r\n      <pre>© 2021 Allen  Powered by <a href=\"https://reactjs.org/\">React</a></pre>\r\n      <a href=\"https://github.com/rockyooooooo/react-blog\">GitHub</a>\r\n    </FooterContainer>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","import styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst PostContainer = styled.div`\r\n  padding: 0.5rem 1.5rem;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  gap: 1rem;\r\n  border-left: 3px solid transparent;\r\n\r\n  &:hover {\r\n    border-left-color: black;\r\n  }\r\n`\r\n\r\nconst PostTitle = styled(Link)`\r\n  color: #333;\r\n  border-bottom: 1px dotted transparent;\r\n  line-height: 1.125;\r\n\r\n  &:hover {\r\n    border-bottom-color: darkgray;\r\n  }\r\n`\r\n\r\nconst PostDate = styled.time`\r\n  flex-shrink: 0;\r\n  color: #757575;\r\n  font-size: 0.9rem;\r\n  font-family: monospace;\r\n`\r\n\r\nconst Post = ({ post }) => {\r\n  const { title, createdAt } = post\r\n\r\n  return (\r\n    <PostContainer>\r\n      <PostDate>{moment(createdAt).format(\"MM月DD日\")}</PostDate>\r\n      <PostTitle to={`/posts/${post.id}`}>{title}</PostTitle>\r\n    </PostContainer>\r\n  )\r\n}\r\n\r\nPost.propTypes = {\r\n  post: PropTypes.shape({\r\n    title: PropTypes.string,\r\n    body: PropTypes.string,\r\n    createdAt: PropTypes.number,\r\n    userId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string\r\n    ]),\r\n    id: PropTypes.number\r\n  })\r\n}\r\n\r\nexport default Post","import { getAuthToken } from \"./utils\"\r\nconst BASE_URL = 'https://student-json-api.lidemy.me'\r\nconst POST_LIMIT = 5\r\nconst POST_SORT = 'createdAt'\r\nconst POST_ORDER = 'desc'\r\n\r\nexport const getPosts = async() => {\r\n  const response = await fetch(`${BASE_URL}/posts?_sort=${POST_SORT}&_order=${POST_ORDER}`)\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getListPosts = async(page) => {\r\n  const response = await fetch(`${BASE_URL}/posts?_page=${page}&_limit=${POST_LIMIT}&_sort=${POST_SORT}&_order=${POST_ORDER}`)\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getPost = async(id) => {\r\n  const response = await fetch(`${BASE_URL}/posts/${id}`)\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getUser = async(userId) => {\r\n  const response = await fetch(`${BASE_URL}/users/${userId}`)\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const register = async(userData) => {\r\n  const { username, password, nickname } = userData\r\n  const response = await fetch(`${BASE_URL}/register`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      nickname,\r\n      username,\r\n      password\r\n    })\r\n  })\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const login = async (username, password) => {\r\n  const response = await fetch(`${BASE_URL}/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password\r\n    })\r\n  })\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\n// export const getMe = async () => {\r\n//   const token = getAuthToken()\r\n//   return fetch(`${BASE_URL}/m1e`, {\r\n//     headers: {\r\n//       'authorization': `Bearer ${token}`\r\n//     }\r\n//   })\r\n//     .then((res) => {\r\n//       if (!res.ok) throw new Error('Network response was not ok in getMe.')\r\n//       return res.json()\r\n//     })\r\n//     .catch((error) => {\r\n//       return {\r\n//         ok: 0,\r\n//         data: error\r\n//       }\r\n//     })\r\n// }\r\n\r\nexport const getMe = async () => {\r\n  const token = getAuthToken()\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/me`, {\r\n      headers: {\r\n        'authorization': `Bearer ${token}`\r\n      }\r\n    })\r\n    if (!response.ok) throw new Error('Network response was not ok in getMe.')\r\n    const data = await response.json()\r\n    return data\r\n  } catch (error) {\r\n    return {\r\n      ok: 0,\r\n      data: error\r\n    }\r\n  }\r\n}\r\n\r\nexport const newPost = async (title, body) => {\r\n  const token = getAuthToken()\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/posts`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'authorization': `Bearer ${token}`\r\n      },\r\n      body: JSON.stringify({\r\n        title,\r\n        body\r\n      })\r\n    })\r\n    if (!response.ok) throw new Error('Network response was not ok in newPost.')\r\n    const data = await response.json()\r\n    return data\r\n  } catch (error) {\r\n    return {\r\n      ok: 0,\r\n      data: error\r\n    }\r\n  }\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport Post from '../../components/utils/Post'\r\nimport { getPosts } from '../../WebAPI'\r\nimport { grayLine } from '../../constants'\r\n\r\nconst HomePageContainer = styled.div``\r\n\r\nconst YearContainer = styled.div`\r\n  margin-bottom: 3rem;\r\n`\r\n\r\nconst Year = styled.div`\r\n  font-size: 1.5rem;\r\n  margin-bottom: 1.5rem;\r\n  line-height: 1.125;\r\n`\r\n\r\nconst PostContainer = styled.div`\r\n  border-left: 1px solid ${grayLine}\r\n`\r\n\r\nconst HomePage = ({ setIsLoading }) => {\r\n  const [posts, setPosts] = useState([])\r\n  const [years, setYears] = useState([])\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    getPosts().then((posts) => {\r\n      setPosts(posts)\r\n      setIsLoading(false)\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const yearsArray = []\r\n    for(const post of posts) {\r\n      yearsArray.push(new Date(post.createdAt).getFullYear())\r\n    }\r\n    setYears([...new Set(yearsArray)])\r\n  }, [posts])\r\n\r\n  return (\r\n    <HomePageContainer>\r\n      {years.map((year) => {\r\n        return (\r\n          <YearContainer key={year}>\r\n            <Year>{year}</Year>\r\n            <PostContainer>\r\n              {\r\n                posts\r\n                  .filter((post) => new Date(post.createdAt).getFullYear() === year)\r\n                  .map((post) => <Post key={post.id} post={post} />)\r\n              }\r\n            </PostContainer>\r\n          </YearContainer>\r\n        )\r\n      })}\r\n    </HomePageContainer>\r\n  )\r\n}\r\n\r\nHomePage.propTypes = {\r\n  setIsLoading: PropTypes.func\r\n}\r\n\r\nexport default HomePage;\r\n","import styled from 'styled-components'\r\nimport { grayLine } from '../../constants'\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n  width: 15rem;\r\n  margin: 0 auto;\r\n`\r\n\r\nexport const Input = styled.input`\r\n  padding: 0.25rem;\r\n  font-size: 1rem;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0;\r\n  border-bottom: 1px solid ${grayLine};\r\n  transition: border-bottom 300ms ease;\r\n\r\n  &:focus {\r\n  border-bottom: 1px solid black;\r\n  }\r\n`\r\n\r\nexport const Button = styled.button`\r\n  margin-top: 1rem;\r\n  padding: 0.25rem;\r\n  font-size: 0.9rem;\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n`\r\n\r\nexport const ErrorMessage = styled.p`\r\n  color: red;\r\n`","import { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { login, getMe } from '../../WebAPI'\r\nimport { setAuthToken } from '../../utils'\r\nimport { AuthContext } from '../../contexts'\r\nimport { Button, ErrorMessage, Form, Input } from '../../components/utils/Form'\r\n\r\nconst LoginPage = () => {\r\n  const { setUser } = useContext(AuthContext)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const history = useHistory()\r\n\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault()\r\n    setErrorMessage(null)\r\n\r\n    const loginResponse = await login(username, password)\r\n    const {  message, token } = loginResponse\r\n    if (!loginResponse.ok) {\r\n      setErrorMessage(message)\r\n      return\r\n    }\r\n    setAuthToken(token)\r\n\r\n    const getMeResponse = await getMe()\r\n    const { data } = getMeResponse\r\n    if (!getMeResponse.ok) {\r\n      setAuthToken(null)\r\n      setErrorMessage(data)\r\n      return\r\n    }\r\n    setUser(data)\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <h2>登入</h2>\r\n      <label htmlFor=\"username\">Username:</label>\r\n      <Input id=\"username\" value={username} onChange={(e) => setUsername(e.target.value)} required />\r\n      <label htmlFor=\"password\">Password:</label>\r\n      <Input id=\"password\" type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n      <Button>登入</Button>\r\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default LoginPage;\r\n","import moment from 'moment'\r\nimport { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { blackDefault, blackTitle } from '../../constants'\r\nimport { getPost, getUser } from '../../WebAPI'\r\n\r\nconst PostContainer = styled.div`\r\n  width: 42.5rem;\r\n  margin: 0 auto;\r\n`\r\n\r\nconst Title = styled.h2`\r\n  margin-bottom: 1rem;\r\n  font-size: 2rem;\r\n  font-weight: 400;\r\n  line-height: 1.125;\r\n  color: ${blackTitle};\r\n`\r\n\r\nconst Info = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 0.75rem;\r\n`\r\n\r\nconst Author = styled.span``\r\n\r\nconst Time = styled.span`\r\n  color: ${blackDefault};\r\n  font-size: 0.9rem;\r\n`\r\n\r\nconst Content = styled.main`\r\n  white-space: pre-wrap;\r\n  margin-bottom: 4rem;\r\n  color: ${blackDefault};\r\n  font-size: 1.1rem;\r\n`\r\n\r\nconst PostPage = ({ setIsLoading }) => {\r\n  const { id } = useParams()\r\n  const [post, setPost] = useState(null)\r\n  const [user, setUser] = useState(null)\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    getPost(id).then((data) => {\r\n      setPost(data)\r\n    })\r\n  }, [id])\r\n\r\n  useEffect(() => {\r\n    if (!post) return\r\n    getUser(post.userId).then((data) => {\r\n      setUser(data)\r\n    })\r\n    setIsLoading(false)\r\n  }, [post])\r\n\r\n  return (\r\n    <>\r\n      {post && user && <PostContainer>\r\n          <Title>{post.title}</Title>\r\n          <Info>\r\n            <Author>{user && user.nickname}</Author>\r\n            <Time>{moment(post.createdAt).format('YYYY年MM月DD日')}</Time>\r\n          </Info>\r\n          <Content>{post.body}</Content>\r\n      </PostContainer>}\r\n    </>\r\n  )\r\n}\r\n\r\nPostPage.propTypes = {\r\n  setIsLoading: PropTypes.func\r\n}\r\n\r\nexport default PostPage","import { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { register, getMe } from '../../WebAPI'\r\nimport { setAuthToken } from '../../utils'\r\nimport { AuthContext } from '../../contexts'\r\nimport { Button, ErrorMessage, Form, Input } from '../../components/utils/Form'\r\n\r\nconst RegisterPage = () => {\r\n  const { setUser } = useContext(AuthContext)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [nickname, setNickname] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const history = useHistory()\r\n\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault()\r\n    setErrorMessage(null)\r\n\r\n    const registerResponse = await register({username, password, nickname})\r\n    const {  message, token } = registerResponse\r\n    if (!registerResponse.ok) {\r\n      setErrorMessage(message)\r\n      return\r\n    }\r\n    setAuthToken(token)\r\n\r\n    const getMeResponse = await getMe()\r\n    const { data } = getMeResponse\r\n    if (!getMeResponse.ok) {\r\n      setAuthToken(null)\r\n      setErrorMessage(data)\r\n      return\r\n    }\r\n    setUser(data)\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <h2>註冊</h2>\r\n      <label htmlFor=\"username\">Username:</label>\r\n      <Input id=\"username\" value={username} onChange={(e) => setUsername(e.target.value)} required />\r\n      <label htmlFor=\"password\">Password:</label>\r\n      <Input id=\"password\" type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n      <label htmlFor=\"nickname\">Nickname:</label>\r\n      <Input id=\"nickname\" value={nickname} onChange={(e) => setNickname(e.target.value)} required />\r\n      <Button>註冊</Button>\r\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default RegisterPage;\r\n","import { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport styled from \"styled-components\"\r\nimport { Form, Button, Input } from \"../../components/utils/Form\"\r\nimport { grayLine } from \"../../constants\"\r\nimport { newPost } from \"../../WebAPI\"\r\n\r\nconst PostForm = styled(Form)`\r\n  gap: 1rem;\r\n  width: 50rem;\r\n`\r\n\r\nconst TextArea = styled.textarea`\r\n  resize: none;\r\n  padding: 0.5rem;\r\n  font-family: inherit;\r\n  font-size: 1rem;\r\n  height: 25rem;\r\n  border-color: ${grayLine};\r\n  outline: none;\r\n  transition: border-color 300ms ease;\r\n\r\n  &:focus {\r\n    border: 1px solid black;\r\n  }\r\n`\r\n\r\nconst NewPostPage = () => {\r\n  const [title, setTitle] = useState('')\r\n  const [content, setContent] = useState('')\r\n    const history = useHistory()\r\n\r\n  const handleInputChange = (e) => {\r\n    setTitle(e.target.value)\r\n  }\r\n\r\n  const handleTextareaChange = (e) => {\r\n    setContent(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault()\r\n    await newPost(title, content)\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <PostForm onSubmit={handleSubmit}>\r\n      <label htmlFor=\"title\">文章標題：</label>\r\n      <Input type=\"text\" id=\"title\" name=\"content\" value={title} onChange={handleInputChange} />\r\n      <label htmlFor=\"content\">文章內容：</label>\r\n      <TextArea id=\"content\" name=\"content\" value={content} onChange={handleTextareaChange} />\r\n      <Button >送出文章</Button>\r\n    </PostForm>\r\n  )\r\n}\r\n\r\nexport default NewPostPage","import styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst PaginatorContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst Pagination = styled.button`\r\n  background: none;\r\n  border: none;\r\n  padding: 0.5rem 1rem;\r\n  width: 6rem;\r\n  cursor: ${(props) => props.$active && \"pointer;\"};\r\n  font-size: 1rem;\r\n  color: inherit;\r\n`\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst Button = styled.button`\r\n  background-color: ${(props) => props.$active ? \"black\" : \"transparent\"};\r\n  color: ${(props) => props.$active ? \"white\" : \"black\"};\r\n  cursor: ${(props) => !props.$active && \"pointer\"};\r\n  border-radius: 50%;\r\n  border: 1px solid transparent;\r\n  width: 2.25rem;\r\n  height: 2.25rem;\r\n  margin: 0.25rem;\r\n\r\n  &:hover {\r\n    border-color: black;\r\n  }\r\n`\r\n\r\nconst Dots = styled.button`\r\n  background-color: transparent;\r\n  border: 1px solid transparent;\r\n  width: 2.25rem;\r\n  height: 2.25rem;\r\n  margin: 0.25rem;\r\n`\r\n\r\nconst Paginator = ({ page, setPage, lastPage }) => {\r\n  const [pages, setPages] = useState([])\r\n\r\n  useEffect(() => {\r\n    setPages([])\r\n    for(let i = 1; i <= lastPage; i++) {\r\n      if (i - page > 2 && i !== lastPage && i + 1 !== lastPage) {\r\n        setPages((prev) => [...prev, <Dots key={i}>...</Dots>])\r\n        i = lastPage - 1\r\n        continue\r\n      }\r\n      if (page - i > 3 && i !== 1) {\r\n        setPages((prev) => [...prev, <Dots key={i}>...</Dots>])\r\n        i = page - 3\r\n        continue\r\n      }\r\n\r\n      setPages((prev) => {\r\n        return [\r\n          ...prev,\r\n          i === page ?\r\n          <Button key={i} $active={true}>{i}</Button> :\r\n          <Button key={i} $active={false} onClick={() => setPage(i)}>{i}</Button>\r\n        ]\r\n      })\r\n    }\r\n  }, [page, setPage, lastPage])\r\n\r\n  return (\r\n    <PaginatorContainer>\r\n      {\r\n        page > 1 ?\r\n        <Pagination $active={true} onClick={() => setPage((prev) => prev - 1)}>＜上一頁</Pagination> :\r\n        <Pagination $active={false} />\r\n      }\r\n      <ButtonContainer>\r\n        {[...pages]}\r\n      </ButtonContainer>\r\n      {\r\n        page < lastPage ?\r\n        <Pagination $active={true} onClick={() => setPage((prev) => prev + 1)}>下一頁＞</Pagination> :\r\n        <Pagination $active={false} />\r\n      }\r\n    </PaginatorContainer>\r\n  )\r\n}\r\n\r\nPaginator.propTypes = {\r\n  page:PropTypes.number,\r\n  setPage: PropTypes.func,\r\n  lastPage: PropTypes.number\r\n}\r\n\r\nexport default Paginator","import { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport ReactLoading from 'react-loading';\r\nimport Post from '../../components/utils/Post'\r\nimport { getListPosts, getPosts } from '../../WebAPI'\r\nimport Paginator from './Paginator'\r\nimport { blackDefault } from '../../constants'\r\n\r\nconst ListPageContainer = styled.div``\r\n\r\nconst PostsContainer = styled.div`\r\n  padding: 0 0 3rem;\r\n  min-height: 14.5625rem;\r\n`\r\n\r\nconst LoadingPageContainer = styled.div`\r\n  height: 11.5625rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst ListPage = ({ setIsLoading }) => {\r\n  const [posts, setPosts] = useState([])\r\n  const [page, setPage] = useState(1)\r\n  const [lastPage, setLastPage] = useState(0)\r\n  const [isPaginationLoading, setPaginationIsLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true)\r\n    getPosts().then((posts) => {\r\n      setLastPage(Math.ceil(posts.length / 5))\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setPaginationIsLoading(true)\r\n    getListPosts(page).then((posts) => {\r\n      setPosts(posts)\r\n      setIsLoading(false)\r\n      setPaginationIsLoading(false)\r\n    })\r\n  }, [page])\r\n\r\n  return (\r\n    <ListPageContainer>\r\n      <PostsContainer>\r\n        {\r\n          isPaginationLoading ?\r\n          !!posts.length && !!lastPage && <LoadingPageContainer>\r\n            <ReactLoading type={'bubbles'} color={blackDefault} />\r\n          </LoadingPageContainer> :\r\n          posts.map((post) => <Post key={post.id} post={post} />)\r\n        }\r\n      </PostsContainer>\r\n      {/* 只用 post.length 跟 lastPage 的話會在畫面顯示 0 */}\r\n      {!!posts.length && !!lastPage && <Paginator page={page} setPage={setPage} lastPage={lastPage} />}\r\n    </ListPageContainer>\r\n  )\r\n}\r\n\r\nListPage.propTypes = {\r\n  setIsLoading: PropTypes.func\r\n}\r\n\r\nexport default ListPage;\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  height: 50vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 1rem;\r\n`\r\n\r\nconst Title = styled.h2`\r\n  font-size: 3rem;\r\n`\r\n\r\nconst Description = styled.p`\r\n  font-size: 1.1rem;\r\n  color: #757575;\r\n  text-align: center;\r\n`\r\n\r\nconst AboutPage = () => {\r\n  return (\r\n    <Container>\r\n      <Title>Large</Title>\r\n      <Description>\r\n        一個想假裝自己是 Medium\r\n        <br />\r\n        但其實是模仿 <a href=\"https://blog.huli.tw/\">Huli's Blog</a> 的部落格\r\n      </Description>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default AboutPage;\r\n","import styled from 'styled-components'\r\nimport ReactLoading from 'react-loading';\r\nimport { blackDefault } from '../../constants';\r\n\r\nconst LoadingPageContainer = styled.div`\r\n  position: absolute;\r\n  top: 53px;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: white;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst ReactLoadingContainer = styled.div`\r\n  position: relative;\r\n  top: -10%;\r\n`\r\n\r\nconst LoadingPage = () => {\r\n  return (\r\n    <LoadingPageContainer>\r\n      <ReactLoadingContainer>\r\n        <ReactLoading type={'bubbles'} color={blackDefault} />\r\n      </ReactLoadingContainer>\r\n    </LoadingPageContainer>\r\n  )\r\n}\r\n\r\nexport default LoadingPage;\r\n","import { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom'\r\nimport Header from './Header'\r\nimport Footer from './Footer'\r\nimport HomePage from '../pages/HomePage'\r\nimport LoginPage from '../pages/LoginPage'\r\nimport PostPage from '../pages/PostPage'\r\nimport RegisterPage from '../pages/RegisterPage/RegisterPage'\r\nimport NewPostPage from '../pages/NewPostPage'\r\nimport ListPage from '../pages/ListPage'\r\nimport { AuthContext } from '../contexts'\r\nimport { getMe } from '../WebAPI'\r\nimport { getAuthToken } from '../utils'\r\nimport AboutPage from '../pages/AboutPage'\r\nimport LoadingPage from '../pages/LoadingPage'\r\n\r\nconst Root = styled.div`\r\n padding-top: 53px;\r\n`\r\n\r\nconst Container = styled.div`\r\n  width: 50rem;\r\n  margin: 0 auto;\r\n  padding-top: 3rem;\r\n`\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    // todo: 有 token 才 call api\r\n    const token = getAuthToken()\r\n    if (!token) return\r\n\r\n    getMe().then((response) => {\r\n      const { ok, data } = response\r\n      if (!ok) {\r\n        console.log(data)\r\n        return\r\n      }\r\n      setUser(data)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, setUser }}>\r\n      <Root>\r\n        <Router>\r\n          <Header />\r\n          {isLoading && <LoadingPage />}\r\n          <Container>\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <HomePage setIsLoading={setIsLoading} />\r\n              </Route>\r\n              <Route exact path=\"/list\">\r\n                <ListPage setIsLoading={setIsLoading} />\r\n              </Route>\r\n              <Route path=\"/new\">\r\n                <NewPostPage />\r\n              </Route>\r\n              <Route path=\"/about\">\r\n                <AboutPage />\r\n              </Route>\r\n              <Route path=\"/login\">\r\n                <LoginPage />\r\n              </Route>\r\n              <Route path=\"/register\">\r\n                <RegisterPage />\r\n              </Route>\r\n              <Route path=\"/posts/:id\">\r\n                <PostPage setIsLoading={setIsLoading} />\r\n              </Route>\r\n            </Switch>\r\n          </Container>\r\n          {!isLoading && <Footer isLoading={isLoading} />}\r\n        </Router>\r\n      </Root>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}