{"version":3,"sources":["contexts.js","utils.js","constants.js","components/Header/Header.js","components/Footer/Footer.js","components/utils/Post.js","WebAPI.js","pages/HomePage/HomePage.js","components/utils/Form.js","pages/LoginPage/LoginPage.js","pages/PostPage/PostPage.js","pages/RegisterPage/RegisterPage.js","pages/NewPostPage/NewPostPage.js","pages/ListPage/Paginator.js","pages/ListPage/ListPage.js","pages/AboutPage/AboutPage.js","pages/LoadingPage/LoadingPage.js","components/App.js","index.js"],"names":["AuthContext","createContext","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","blackDefault","grayLine","blueLink","HeaderContainer","styled","header","Navbar","div","Menu","props","isHamburgerOpen","Brand","Link","NavbarList","Nav","NavLink","Hamburger","Span","span","BurgerTop","BurgerMiddle","BurgerBottom","activeStyle","color","Header","useContext","user","setUser","location","useLocation","history","useHistory","useState","setIsHamburgerOpen","to","onClick","pathname","push","prev","FooterContainer","footer","Footer","href","rel","target","PostContainer","PostTitle","PostDate","time","Post","post","title","createdAt","moment","format","id","BASE_URL","POST_SORT","POST_ORDER","getPosts","a","fetch","response","json","data","getListPosts","page","getPost","getUser","userId","register","userData","username","password","nickname","method","headers","body","JSON","stringify","login","getMe","ok","Error","newPost","HomePageContainer","YearContainer","Year","HomePage","setIsLoading","posts","setPosts","years","setYears","useLayoutEffect","then","useEffect","yearsArray","Date","getFullYear","Set","map","year","filter","Form","form","Input","input","Button","button","ErrorMessage","p","LoginPage","setUsername","setPassword","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","loginResponse","message","getMeResponse","onSubmit","htmlFor","value","onChange","required","type","Title","h2","Info","Author","Time","Content","main","PostPage","useParams","setPost","asyncDoEffects","useCallback","length","newTitle","slice","concat","renderTitle","RegisterPage","setNickname","registerResponse","PostForm","TextArea","textarea","NewPostPage","setTitle","content","setContent","name","PaginatorContainer","Pagination","$active","ButtonContainer","Dots","Paginator","setPage","lastPage","pages","setPages","i","ListPageContainer","PostsContainer","LoadingPageContainer","ListPage","setLastPage","isPaginationLoading","setPaginationIsLoading","Math","ceil","Container","Description","AboutPage","ReactLoadingContainer","LoadingPage","Root","App","isLoading","console","log","Provider","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23cefc1d.chunk.js","sourcesContent":["import { createContext } from 'react'\r\n\r\nexport const AuthContext = createContext(null)","const TOKEN_NAME = 'token'\r\n\r\nexport const setAuthToken = (token) => localStorage.setItem(TOKEN_NAME, token)\r\nexport const getAuthToken = () => localStorage.getItem(TOKEN_NAME)","export const blackDefault = '#4A4A4A'\r\nexport const blackTitle = '#363636'\r\nexport const grayLine = '#dbdbdb'\r\nexport const blueLink = '#3273DC'","import styled from 'styled-components'\r\nimport { Link, NavLink, useHistory, useLocation } from 'react-router-dom'\r\nimport { useContext, useState } from 'react'\r\nimport { AuthContext } from '../../contexts'\r\nimport { setAuthToken } from '../../utils'\r\nimport { blackDefault, blueLink, grayLine } from '../../constants'\r\n\r\nconst HeaderContainer = styled.header`\r\n  background: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  border-bottom: 1px solid ${grayLine};\r\n`\r\n\r\nconst Navbar = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: 0 auto;\r\n  width: 50rem;\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst Menu = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex: 1;\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    & {\r\n      display: ${(props) => props.isHamburgerOpen ? 'flex' : 'none'};\r\n      flex-direction: column;\r\n      align-items: center;\r\n      width: 100%;\r\n      background: white;\r\n      position: absolute;\r\n      top: 3.25rem;\r\n      box-shadow: 0 8px 16px #0a0a0a1a;\r\n    }\r\n  }\r\n`\r\n\r\nconst Brand = styled(Link)`\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  color: ${blackDefault};\r\n  cursor: pointer;\r\n  padding: 0.5rem 1rem;\r\n  line-height: 1.5;\r\n\r\n  &:hover {\r\n    color: ${blueLink};\r\n  }\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    &:hover {\r\n      background-color: #0000000d;\r\n    }\r\n  }\r\n`\r\n\r\nconst NavbarList = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    & {\r\n      flex-direction: column;\r\n      width: 100%;\r\n      padding: 0.5rem;\r\n    }\r\n\r\n    & + & {\r\n      box-shadow: 0 8px 16px #0a0a0a1a;\r\n    }\r\n  }\r\n`\r\n\r\nconst Nav = styled(NavLink)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  font-size: 1.1rem;\r\n  color: ${blackDefault};\r\n  padding: 0.5rem 1rem;\r\n  line-height: 1.5;\r\n\r\n  &:hover {\r\n    color: ${blueLink};\r\n  }\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    & {\r\n      width: 100%;\r\n    }\r\n\r\n    &:hover {\r\n      background-color: #0000000d;\r\n    }\r\n  }\r\n`\r\n\r\nconst Hamburger = styled.div`\r\n  position: relative;\r\n  width: 3.25rem;\r\n  height: 3.25rem;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #0000000d;\r\n  }\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    & {\r\n      display: none;\r\n    }\r\n  }\r\n`\r\nconst Span = styled.span`\r\n  display: block;\r\n  background-color: ${blackDefault};\r\n  width: 1rem;\r\n  height: 1px;\r\n  position: absolute;\r\n  left: calc(50% - 0.5rem);\r\n  transition: transform 300ms ease, opacity 300ms ease;\r\n`\r\nconst BurgerTop = styled(Span)`\r\n  top: calc(50% - calc(1rem - 6px) / 2);\r\n  transform-origin: top left;\r\n  transform: rotate(${(props) => props.isHamburgerOpen && '45deg'}) translateY(${(props) => props.isHamburgerOpen && '-1px'});\r\n`\r\nconst BurgerMiddle = styled(Span)`\r\n  top: 50%;\r\n  opacity: ${(props) => props.isHamburgerOpen && 0};\r\n`\r\nconst BurgerBottom = styled(Span)`\r\n  top: calc(50% + calc(1rem - 6px) / 2);\r\n  transform-origin: bottom left;\r\n  transform: rotate(${(props) => props.isHamburgerOpen && '-45deg'});\r\n`\r\n\r\nconst activeStyle = {\r\n  color: blueLink\r\n}\r\n\r\nconst Header = () => {\r\n  const { user, setUser } = useContext(AuthContext)\r\n  const location = useLocation()\r\n  const history = useHistory()\r\n  const [isHamburgerOpen, setIsHamburgerOpen] = useState(false)\r\n\r\n  const handleLogout = () => {\r\n    setAuthToken('')\r\n    setUser(null)\r\n    setIsHamburgerOpen(false)\r\n    if (location.pathname !== '/') {\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  const handleHamburgerClick = () => {\r\n    setIsHamburgerOpen((prev) => !prev)\r\n  }\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      <Navbar>\r\n        <Brand to=\"/\" onClick={() => setIsHamburgerOpen(false)}>Large</Brand>\r\n        <Menu isHamburgerOpen={isHamburgerOpen}>\r\n          <NavbarList>\r\n            <Nav to=\"/list\" activeStyle={activeStyle} onClick={() => setIsHamburgerOpen(false)}>文章列表</Nav>\r\n            {user && <Nav to=\"/new\" activeStyle={activeStyle} onClick={() => setIsHamburgerOpen(false)}>發布文章</Nav>}\r\n            <Nav to=\"/about\" activeStyle={activeStyle} onClick={() => setIsHamburgerOpen(false)}>About</Nav>\r\n          </NavbarList>\r\n          <NavbarList>\r\n            {\r\n              user ?\r\n              <Nav to=\"/\" onClick={handleLogout}>登出</Nav> :\r\n              <>\r\n                <Nav to=\"/register\" activeStyle={activeStyle} onClick={() => setIsHamburgerOpen(false)}>註冊</Nav>\r\n                <Nav to=\"/login\" activeStyle={activeStyle} onClick={() => setIsHamburgerOpen(false)}>登入</Nav>\r\n              </>\r\n            }\r\n          </NavbarList>\r\n        </Menu>\r\n        <Hamburger onClick={handleHamburgerClick}>\r\n          <BurgerTop isHamburgerOpen={isHamburgerOpen} />\r\n          <BurgerMiddle isHamburgerOpen={isHamburgerOpen} />\r\n          <BurgerBottom isHamburgerOpen={isHamburgerOpen} />\r\n        </Hamburger>\r\n      </Navbar>\r\n    </HeaderContainer>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import styled from 'styled-components'\r\nimport { grayLine } from '../../constants';\r\n\r\nconst FooterContainer = styled.footer`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  border-top: 1px solid ${grayLine};\r\n  padding: 2rem 1rem 0;\r\n  margin: 5rem auto;\r\n  font-size: 0.9rem;\r\n  \r\n  @media screen and (min-width: 1024px) {\r\n    width: 50rem;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 1.5rem;\r\n  }\r\n`\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <FooterContainer>\r\n      <pre>© 2021 Allen  Powered by <a href=\"https://reactjs.org/\" rel=\"noopener noreferrer\" target=\"_blank\">React</a></pre>\r\n      <a href=\"https://github.com/rockyooooooo/react-blog\" rel=\"noopener noreferrer\" target=\"_blank\">GitHub</a>\r\n    </FooterContainer>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","import styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst PostContainer = styled.div`\r\n  padding: 0.5rem 1.5rem;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  gap: 1rem;\r\n  border-left: 3px solid transparent;\r\n\r\n  &:hover {\r\n    border-left-color: black;\r\n  }\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    & {\r\n      flex-direction: column;\r\n      align-items: flex-start;\r\n      gap: 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst PostTitle = styled(Link)`\r\n  color: #333;\r\n  border-bottom: 1px dotted transparent;\r\n  line-height: 1.125;\r\n  max-width: 100%;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n\r\n  &:hover {\r\n    border-bottom-color: darkgray;\r\n  }\r\n`\r\n\r\nconst PostDate = styled.time`\r\n  flex-shrink: 0;\r\n  color: #757575;\r\n  font-size: 0.9rem;\r\n  font-family: monospace;\r\n`\r\n\r\nconst Post = ({ post }) => {\r\n  const { title, createdAt } = post\r\n\r\n  return (\r\n    <PostContainer>\r\n      <PostDate>{moment(createdAt).format(\"MM月DD日\")}</PostDate>\r\n      <PostTitle to={`/posts/${post.id}`}>{title}</PostTitle>\r\n    </PostContainer>\r\n  )\r\n}\r\n\r\nPost.propTypes = {\r\n  post: PropTypes.shape({\r\n    title: PropTypes.string,\r\n    body: PropTypes.string,\r\n    createdAt: PropTypes.number,\r\n    userId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string\r\n    ]),\r\n    id: PropTypes.number\r\n  })\r\n}\r\n\r\nexport default Post","import { getAuthToken } from \"./utils\"\r\nconst BASE_URL = 'https://student-json-api.lidemy.me'\r\nconst POST_LIMIT = 5\r\nconst POST_SORT = 'createdAt'\r\nconst POST_ORDER = 'desc'\r\n\r\nexport const getPosts = async() => {\r\n  const response = await fetch(`${BASE_URL}/posts?_sort=${POST_SORT}&_order=${POST_ORDER}`)\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getListPosts = async(page) => {\r\n  const response = await fetch(`${BASE_URL}/posts?_page=${page}&_limit=${POST_LIMIT}&_sort=${POST_SORT}&_order=${POST_ORDER}`)\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getPost = async(id) => {\r\n  const response = await fetch(`${BASE_URL}/posts/${id}`)\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getUser = async(userId) => {\r\n  const response = await fetch(`${BASE_URL}/users/${userId}`)\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const register = async(userData) => {\r\n  const { username, password, nickname } = userData\r\n  const response = await fetch(`${BASE_URL}/register`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      nickname,\r\n      username,\r\n      password\r\n    })\r\n  })\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const login = async (username, password) => {\r\n  const response = await fetch(`${BASE_URL}/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password\r\n    })\r\n  })\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getMe = async () => {\r\n  const token = getAuthToken()\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/me`, {\r\n      headers: {\r\n        'authorization': `Bearer ${token}`\r\n      }\r\n    })\r\n    if (!response.ok) throw new Error('Network response was not ok in getMe.')\r\n    const data = await response.json()\r\n    return data\r\n  } catch (error) {\r\n    return {\r\n      ok: 0,\r\n      data: error\r\n    }\r\n  }\r\n}\r\n\r\nexport const newPost = async (title, body) => {\r\n  const token = getAuthToken()\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/posts`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'authorization': `Bearer ${token}`\r\n      },\r\n      body: JSON.stringify({\r\n        title,\r\n        body\r\n      })\r\n    })\r\n    if (!response.ok) throw new Error('Network response was not ok in newPost.')\r\n    const data = await response.json()\r\n    return data\r\n  } catch (error) {\r\n    return {\r\n      ok: 0,\r\n      data: error\r\n    }\r\n  }\r\n}\r\n","import { useEffect, useState, useLayoutEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport Post from '../../components/utils/Post'\r\nimport { getPosts } from '../../WebAPI'\r\nimport { grayLine } from '../../constants'\r\n\r\nconst HomePageContainer = styled.div`\r\n  @media screen and (max-width: 1024px) {\r\n    & {\r\n      width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nconst YearContainer = styled.div`\r\n  margin-bottom: 3rem;\r\n`\r\n\r\nconst Year = styled.div`\r\n  font-size: 1.5rem;\r\n  margin-bottom: 1.5rem;\r\n  line-height: 1.125;\r\n`\r\n\r\nconst PostContainer = styled.div`\r\n  border-left: 1px solid ${grayLine}\r\n`\r\n\r\nconst HomePage = ({ setIsLoading }) => {\r\n  const [posts, setPosts] = useState([])\r\n  const [years, setYears] = useState([])\r\n\r\n  useLayoutEffect(() => {\r\n    setIsLoading(true)\r\n    getPosts().then((posts) => {\r\n      setPosts(posts)\r\n      setIsLoading(false)\r\n    })\r\n  }, [setIsLoading])\r\n\r\n  useEffect(() => {\r\n    const yearsArray = []\r\n    for(const post of posts) {\r\n      yearsArray.push(new Date(post.createdAt).getFullYear())\r\n    }\r\n    setYears([...new Set(yearsArray)])\r\n  }, [posts])\r\n\r\n  return (\r\n    <HomePageContainer>\r\n      {years.map((year) => {\r\n        return (\r\n          <YearContainer key={year}>\r\n            <Year>{year}</Year>\r\n            <PostContainer>\r\n              {\r\n                posts\r\n                  .filter((post) => new Date(post.createdAt).getFullYear() === year)\r\n                  .map((post) => <Post key={post.id} post={post} />)\r\n              }\r\n            </PostContainer>\r\n          </YearContainer>\r\n        )\r\n      })}\r\n    </HomePageContainer>\r\n  )\r\n}\r\n\r\nHomePage.propTypes = {\r\n  setIsLoading: PropTypes.func\r\n}\r\n\r\nexport default HomePage;\r\n","import styled from 'styled-components'\r\nimport { grayLine } from '../../constants'\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n  width: 15rem;\r\n  margin: 0 auto;\r\n`\r\n\r\nexport const Input = styled.input`\r\n  padding: 0.25rem;\r\n  font-size: 1rem;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 0;\r\n  border-bottom: 1px solid ${grayLine};\r\n  transition: border-bottom 300ms ease;\r\n\r\n  &:focus {\r\n  border-bottom: 1px solid black;\r\n  }\r\n`\r\n\r\nexport const Button = styled.button`\r\n  margin-top: 1rem;\r\n  padding: 0.25rem;\r\n  font-size: 0.9rem;\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n`\r\n\r\nexport const ErrorMessage = styled.p`\r\n  color: red;\r\n`","import { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { login, getMe } from '../../WebAPI'\r\nimport { setAuthToken } from '../../utils'\r\nimport { AuthContext } from '../../contexts'\r\nimport { Button, ErrorMessage, Form, Input } from '../../components/utils/Form'\r\n\r\nconst LoginPage = ({ setIsLoading }) => {\r\n  const { setUser } = useContext(AuthContext)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const history = useHistory()\r\n\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault()\r\n    setErrorMessage(null)\r\n\r\n    setIsLoading(true)\r\n    const loginResponse = await login(username, password)\r\n    const {  message, token } = loginResponse\r\n    if (!loginResponse.ok) {\r\n      setErrorMessage(message)\r\n      setIsLoading(false)\r\n      return\r\n    }\r\n    setAuthToken(token)\r\n\r\n    const getMeResponse = await getMe()\r\n    const { data } = getMeResponse\r\n    if (!getMeResponse.ok) {\r\n      setAuthToken(null)\r\n      setErrorMessage(data)\r\n      setIsLoading(false)\r\n      return\r\n    }\r\n    setUser(data)\r\n    setIsLoading(false)\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <h2>登入</h2>\r\n      <label htmlFor=\"username\">Username:</label>\r\n      <Input id=\"username\" value={username} onChange={(e) => setUsername(e.target.value)} required />\r\n      <label htmlFor=\"password\">Password:</label>\r\n      <Input id=\"password\" type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n      <Button>登入</Button>\r\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n    </Form>\r\n  )\r\n}\r\n\r\nLoginPage.propTypes = {\r\n  setIsLoading: PropTypes.func\r\n}\r\n\r\nexport default LoginPage;\r\n","import moment from 'moment'\r\nimport { useLayoutEffect, useState, useCallback } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { blackDefault, blackTitle } from '../../constants'\r\nimport { getPost, getUser } from '../../WebAPI'\r\n\r\nconst PostContainer = styled.div`\r\n  margin: 0 auto;\r\n  \r\n  @media screen and (min-width: 1024px) {\r\n    width: 50rem;\r\n  }\r\n`\r\n\r\nconst Title = styled.h2`\r\n  margin-bottom: 1rem;\r\n  font-size: 2rem;\r\n  font-weight: 400;\r\n  line-height: 1.125;\r\n  color: ${blackTitle};\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\nconst Info = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 0.75rem;\r\n`\r\n\r\nconst Author = styled.span`\r\n  font-size: 1rem;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\nconst Time = styled.span`\r\n  color: ${blackDefault};\r\n  font-size: 0.9rem;\r\n`\r\n\r\nconst Content = styled.main`\r\n  white-space: pre-wrap;\r\n  word-break: break-word;\r\n  margin-bottom: 4rem;\r\n  color: ${blackDefault};\r\n  font-size: 1.1rem;\r\n`\r\n\r\nconst TITLE_MAX_LENGTH = 49\r\n\r\nconst PostPage = ({ setIsLoading }) => {\r\n  const { id } = useParams()\r\n  const [post, setPost] = useState(null)\r\n  const [user, setUser] = useState(null)\r\n\r\n  const asyncDoEffects = useCallback(async (id) => {\r\n    setIsLoading(true)\r\n    const post = await getPost(id)\r\n    setPost(post)\r\n    const user = await getUser(post.userId)\r\n    setUser(user)\r\n    setIsLoading(false)\r\n  }, [setIsLoading])\r\n\r\n  useLayoutEffect(() => {\r\n    asyncDoEffects(id)\r\n  }, [id, asyncDoEffects])\r\n\r\n  const renderTitle = (title) => {\r\n    if (title.length > TITLE_MAX_LENGTH) {\r\n      const newTitle = title.slice(0, TITLE_MAX_LENGTH).concat('...')\r\n      return <Title>{newTitle}</Title>\r\n    }\r\n    return <Title>{title}</Title>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {user && <PostContainer>\r\n          {renderTitle(post.title)}\r\n          <Info>\r\n            <Author>{user.nickname}</Author>\r\n            <Time>{moment(post.createdAt).format('YYYY年MM月DD日')}</Time>\r\n          </Info>\r\n          <Content>{post.body}</Content>\r\n      </PostContainer>}\r\n    </>\r\n  )\r\n}\r\n\r\nPostPage.propTypes = {\r\n  setIsLoading: PropTypes.func\r\n}\r\n\r\nexport default PostPage","import { useContext, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { register, getMe } from '../../WebAPI'\r\nimport { setAuthToken } from '../../utils'\r\nimport { AuthContext } from '../../contexts'\r\nimport { Button, ErrorMessage, Form, Input } from '../../components/utils/Form'\r\n\r\nconst RegisterPage = ({ setIsLoading }) => {\r\n  const { setUser } = useContext(AuthContext)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [nickname, setNickname] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const history = useHistory()\r\n\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault()\r\n    setErrorMessage(null)\r\n\r\n    setIsLoading(true)\r\n    const registerResponse = await register({username, password, nickname})\r\n    const {  message, token } = registerResponse\r\n    if (!registerResponse.ok) {\r\n      setErrorMessage(message)\r\n      setIsLoading(false)\r\n      return\r\n    }\r\n    setAuthToken(token)\r\n\r\n    const getMeResponse = await getMe()\r\n    const { data } = getMeResponse\r\n    if (!getMeResponse.ok) {\r\n      setAuthToken(null)\r\n      setErrorMessage(data)\r\n      setIsLoading(false)\r\n      return\r\n    }\r\n    setUser(data)\r\n    setIsLoading(false)\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <h2>註冊</h2>\r\n      <label htmlFor=\"username\">Username:</label>\r\n      <Input id=\"username\" value={username} onChange={(e) => setUsername(e.target.value)} required />\r\n      <label htmlFor=\"password\">Password:</label>\r\n      <Input id=\"password\" type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n      <label htmlFor=\"nickname\">Nickname:</label>\r\n      <Input id=\"nickname\" value={nickname} onChange={(e) => setNickname(e.target.value)} required />\r\n      <Button>註冊</Button>\r\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n    </Form>\r\n  )\r\n}\r\n\r\nRegisterPage.propTypes = {\r\n  setIsLoading: PropTypes.func\r\n}\r\n\r\nexport default RegisterPage;\r\n","import { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport styled from \"styled-components\"\r\nimport { Form, Button, Input } from \"../../components/utils/Form\"\r\nimport { grayLine } from \"../../constants\"\r\nimport { newPost } from \"../../WebAPI\"\r\n\r\nconst PostForm = styled(Form)`\r\n  gap: 1rem;\r\n  width: 50rem;\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    & {\r\n      width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nconst TextArea = styled.textarea`\r\n  resize: none;\r\n  padding: 0.5rem;\r\n  font-family: inherit;\r\n  font-size: 1rem;\r\n  height: 25rem;\r\n  border-color: ${grayLine};\r\n  outline: none;\r\n  transition: border-color 300ms ease;\r\n\r\n  &:focus {\r\n    border: 1px solid black;\r\n  }\r\n`\r\n\r\nconst NewPostPage = () => {\r\n  const [title, setTitle] = useState('')\r\n  const [content, setContent] = useState('')\r\n    const history = useHistory()\r\n\r\n  const handleInputChange = (e) => {\r\n    setTitle(e.target.value)\r\n  }\r\n\r\n  const handleTextareaChange = (e) => {\r\n    setContent(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault()\r\n    await newPost(title, content)\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <PostForm onSubmit={handleSubmit}>\r\n      <label htmlFor=\"title\">文章標題：</label>\r\n      <Input type=\"text\" id=\"title\" name=\"content\" value={title} onChange={handleInputChange} />\r\n      <label htmlFor=\"content\">文章內容：</label>\r\n      <TextArea id=\"content\" name=\"content\" value={content} onChange={handleTextareaChange} />\r\n      <Button >送出文章</Button>\r\n    </PostForm>\r\n  )\r\n}\r\n\r\nexport default NewPostPage","import styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst PaginatorContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst Pagination = styled.button`\r\n  background: none;\r\n  border: none;\r\n  padding: 0.5rem 1rem;\r\n  width: 6rem;\r\n  cursor: ${(props) => props.$active && \"pointer;\"};\r\n  font-size: 1rem;\r\n  color: inherit;\r\n`\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    & {\r\n      display: none;\r\n    }\r\n  }\r\n`\r\n\r\nconst Button = styled.button`\r\n  background-color: ${(props) => props.$active ? \"black\" : \"transparent\"};\r\n  color: ${(props) => props.$active ? \"white\" : \"black\"};\r\n  cursor: ${(props) => !props.$active && \"pointer\"};\r\n  border-radius: 50%;\r\n  border: 1px solid transparent;\r\n  width: 2.25rem;\r\n  height: 2.25rem;\r\n  margin: 0.25rem;\r\n\r\n  &:hover {\r\n    border-color: black;\r\n  }\r\n`\r\n\r\nconst Dots = styled.button`\r\n  background-color: transparent;\r\n  border: 1px solid transparent;\r\n  width: 2.25rem;\r\n  height: 2.25rem;\r\n  margin: 0.25rem;\r\n`\r\n\r\nconst Paginator = ({ page, setPage, lastPage }) => {\r\n  const [pages, setPages] = useState([])\r\n\r\n  useEffect(() => {\r\n    setPages([])\r\n    for(let i = 1; i <= lastPage; i++) {\r\n      if (i - page > 2 && i !== lastPage && i + 1 !== lastPage) {\r\n        setPages((prev) => [...prev, <Dots key={i}>...</Dots>])\r\n        i = lastPage - 1\r\n        continue\r\n      }\r\n      if (page - i > 3 && i !== 1) {\r\n        setPages((prev) => [...prev, <Dots key={i}>...</Dots>])\r\n        i = page - 3\r\n        continue\r\n      }\r\n\r\n      setPages((prev) => {\r\n        return [\r\n          ...prev,\r\n          i === page ?\r\n          <Button key={i} $active={true}>{i}</Button> :\r\n          <Button key={i} $active={false} onClick={() => setPage(i)}>{i}</Button>\r\n        ]\r\n      })\r\n    }\r\n  }, [page, setPage, lastPage])\r\n\r\n  return (\r\n    <PaginatorContainer>\r\n      {\r\n        page > 1 ?\r\n        <Pagination $active={true} onClick={() => setPage((prev) => prev - 1)}>＜上一頁</Pagination> :\r\n        <Pagination $active={false} />\r\n      }\r\n      <ButtonContainer>\r\n        {[...pages]}\r\n      </ButtonContainer>\r\n      {\r\n        page < lastPage ?\r\n        <Pagination $active={true} onClick={() => setPage((prev) => prev + 1)}>下一頁＞</Pagination> :\r\n        <Pagination $active={false} />\r\n      }\r\n    </PaginatorContainer>\r\n  )\r\n}\r\n\r\nPaginator.propTypes = {\r\n  page:PropTypes.number,\r\n  setPage: PropTypes.func,\r\n  lastPage: PropTypes.number\r\n}\r\n\r\nexport default Paginator","import { useEffect, useState, useLayoutEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport ReactLoading from 'react-loading';\r\nimport Post from '../../components/utils/Post'\r\nimport { getListPosts, getPosts } from '../../WebAPI'\r\nimport Paginator from './Paginator'\r\nimport { blackDefault } from '../../constants'\r\n\r\nconst ListPageContainer = styled.div``\r\n\r\nconst PostsContainer = styled.div`\r\n  padding: 0 0 3rem;\r\n  min-height: 14.5625rem;\r\n`\r\n\r\nconst LoadingPageContainer = styled.div`\r\n  height: 11.5625rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst ListPage = ({ setIsLoading }) => {\r\n  const [posts, setPosts] = useState([])\r\n  const [page, setPage] = useState(1)\r\n  const [lastPage, setLastPage] = useState(0)\r\n  const [isPaginationLoading, setPaginationIsLoading] = useState(false)\r\n\r\n  useLayoutEffect(() => {\r\n    setIsLoading(true)\r\n    getPosts().then((posts) => {\r\n      setLastPage(Math.ceil(posts.length / 5))\r\n    })\r\n  }, [setIsLoading])\r\n\r\n  useEffect(() => {\r\n    setPaginationIsLoading(true)\r\n    getListPosts(page).then((posts) => {\r\n      setPosts(posts)\r\n      setIsLoading(false)\r\n      setPaginationIsLoading(false)\r\n    })\r\n  }, [page, setIsLoading])\r\n\r\n  return (\r\n    <ListPageContainer>\r\n      <PostsContainer>\r\n        {\r\n          isPaginationLoading ?\r\n          !!posts.length && !!lastPage && <LoadingPageContainer>\r\n            <ReactLoading type={'bubbles'} color={blackDefault} />\r\n          </LoadingPageContainer> :\r\n          posts.map((post) => <Post key={post.id} post={post} />)\r\n        }\r\n      </PostsContainer>\r\n      {/* 只用 post.length 跟 lastPage 的話會在畫面顯示 0 */}\r\n      {!!posts.length && !!lastPage && <Paginator page={page} setPage={setPage} lastPage={lastPage} />}\r\n    </ListPageContainer>\r\n  )\r\n}\r\n\r\nListPage.propTypes = {\r\n  setIsLoading: PropTypes.func\r\n}\r\n\r\nexport default ListPage;\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  height: 50vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 1rem;\r\n`\r\n\r\nconst Title = styled.h2`\r\n  font-size: 3rem;\r\n`\r\n\r\nconst Description = styled.p`\r\n  font-size: 1.1rem;\r\n  color: #757575;\r\n  text-align: center;\r\n`\r\n\r\nconst AboutPage = () => {\r\n  return (\r\n    <Container>\r\n      <Title>Large</Title>\r\n      <Description>\r\n        一個想假裝自己是 Medium\r\n        <br />\r\n        但其實是模仿 <a href=\"https://blog.huli.tw/\" rel=\"noopener noreferrer\" target=\"_blank\">Huli's Blog</a> 的部落格\r\n      </Description>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default AboutPage;\r\n","import styled from 'styled-components'\r\nimport ReactLoading from 'react-loading';\r\nimport { blackDefault } from '../../constants';\r\n\r\nconst LoadingPageContainer = styled.div`\r\n  position: absolute;\r\n  top: 53px;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: white;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst ReactLoadingContainer = styled.div`\r\n  position: relative;\r\n  top: -10%;\r\n`\r\n\r\nconst LoadingPage = () => {\r\n  return (\r\n    <LoadingPageContainer>\r\n      <ReactLoadingContainer>\r\n        <ReactLoading type={'bubbles'} color={blackDefault} />\r\n      </ReactLoadingContainer>\r\n    </LoadingPageContainer>\r\n  )\r\n}\r\n\r\nexport default LoadingPage;\r\n","import { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom'\r\nimport Header from './Header'\r\nimport Footer from './Footer'\r\nimport HomePage from '../pages/HomePage'\r\nimport LoginPage from '../pages/LoginPage'\r\nimport PostPage from '../pages/PostPage'\r\nimport RegisterPage from '../pages/RegisterPage/RegisterPage'\r\nimport NewPostPage from '../pages/NewPostPage'\r\nimport ListPage from '../pages/ListPage'\r\nimport { AuthContext } from '../contexts'\r\nimport { getMe } from '../WebAPI'\r\nimport { getAuthToken } from '../utils'\r\nimport AboutPage from '../pages/AboutPage'\r\nimport LoadingPage from '../pages/LoadingPage'\r\n\r\nconst Root = styled.div`\r\n padding-top: 53px;\r\n`\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n  padding: 3rem 1.5rem 0;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    width: 50rem;\r\n  }\r\n`\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const token = getAuthToken()\r\n    if (!token) return\r\n\r\n    getMe().then((response) => {\r\n      const { ok, data } = response\r\n      if (!ok) {\r\n        console.log(data)\r\n        return\r\n      }\r\n      setUser(data)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, setUser }}>\r\n      <Root>\r\n        <Router>\r\n          <Header />\r\n          {isLoading && <LoadingPage />}\r\n          <Container>\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <HomePage setIsLoading={setIsLoading} />\r\n              </Route>\r\n              <Route path=\"/list\">\r\n                <ListPage setIsLoading={setIsLoading} />\r\n              </Route>\r\n              <Route path=\"/new\">\r\n                <NewPostPage />\r\n              </Route>\r\n              <Route path=\"/about\">\r\n                <AboutPage />\r\n              </Route>\r\n              <Route path=\"/login\">\r\n                <LoginPage setIsLoading={setIsLoading} />\r\n              </Route>\r\n              <Route path=\"/register\">\r\n                <RegisterPage setIsLoading={setIsLoading} />\r\n              </Route>\r\n              <Route path=\"/posts/:id\">\r\n                <PostPage setIsLoading={setIsLoading} />\r\n              </Route>\r\n            </Switch>\r\n          </Container>\r\n          {!isLoading && <Footer isLoading={isLoading} />}\r\n        </Router>\r\n      </Root>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}