{"version":3,"sources":["contexts.js","utils.js","components/Header/Header.js","WebAPI.js","pages/HomePage/HomePage.js","pages/LoginPage/LoginPage.js","pages/PostPage/PostPage.js","components/App.js","index.js"],"names":["AuthContext","createContext","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","HeaderContainer","styled","header","LeftContainer","div","Brand","h1","NavbarList","Nav","Link","props","$active","Header","useContext","user","setUser","location","useLocation","history","useHistory","to","pathname","onClick","push","BASE_URL","getPosts","a","fetch","response","json","data","getPost","id","getUser","userId","login","username","password","method","headers","body","JSON","stringify","getMe","ok","Error","Root","PostContainer","article","PostTitle","PostDate","p","Post","post","title","createdAt","Date","toLocaleString","HomePage","useState","posts","setPosts","useEffect","then","map","ErrorMessage","h2","LoginPage","setUsername","setPassword","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","loginResponse","message","getMeResponse","onSubmit","value","onChange","target","type","Title","Info","Author","span","Time","Content","main","PostPage","useParams","setPost","nickname","App","console","log","Provider","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.350eb526.chunk.js","sourcesContent":["import { createContext } from 'react'\r\n\r\nexport const AuthContext = createContext(null)","const TOKEN_NAME = 'token'\r\n\r\nexport const setAuthToken = (token) => localStorage.setItem(TOKEN_NAME, token)\r\nexport const getAuthToken = () => localStorage.getItem(TOKEN_NAME)","import styled from 'styled-components'\nimport { Link, useHistory, useLocation } from 'react-router-dom'\nimport { useContext } from 'react'\nimport { AuthContext } from '../../contexts'\nimport { setAuthToken } from '../../utils'\n\nconst HeaderContainer = styled.header`\n  background: white;\n  height: 4rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  padding: 0 2rem;\n`\n\nconst LeftContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4rem;\n`\n\nconst Brand = styled.h1``\n\nconst NavbarList = styled.div`\n  display: flex;\n  align-items: center;\n  height: 4rem;\n`\n\nconst Nav = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  width: 6rem;\n  cursor: pointer;\n\n  background: ${(props) => props.$active ? 'rgba(0, 0, 0, 0.3)' : ''}\n`\n\nconst Header = () => {\n  const { user, setUser } = useContext(AuthContext)\n  const location = useLocation()\n  const history = useHistory()\n\n  const handleLogout = () => {\n    setAuthToken(null)\n    setUser(null)\n    if (location.pathname !== '/') {\n      history.push('/')\n    }\n  }\n\n  return (\n    <HeaderContainer>\n      <LeftContainer>\n        <Brand>我的第一個部落格</Brand>\n        <NavbarList>\n          <Nav to=\"/\" $active={location.pathname === '/'}>首頁</Nav>\n          {user && <Nav to=\"/new\" $active={location.pathname === '/new'}>發布文章</Nav>}\n        </NavbarList>\n      </LeftContainer>\n      <NavbarList>\n        {\n          user ?\n          <Nav to=\"/\" onClick={handleLogout}>登出</Nav> :\n          <Nav to=\"/login\" $active={location.pathname === '/login'}>登入</Nav>\n        }\n      </NavbarList>\n    </HeaderContainer>\n  )\n}\n\nexport default Header;\n","import { getAuthToken } from \"./utils\"\r\nconst BASE_URL = 'https://student-json-api.lidemy.me'\r\n\r\nexport const getPosts = async() => {\r\n   const response = await fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`)\r\n   const data = await response.json()\r\n   return data\r\n}\r\n\r\nexport const getPost = async(id) => {\r\n  const response = await fetch(`${BASE_URL}/posts/${id}`)\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getUser = async(userId) => {\r\n  const response = await fetch(`${BASE_URL}/users/${userId}`)\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const login = async (username, password) => {\r\n  const response = await fetch(`${BASE_URL}/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password\r\n    })\r\n  })\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\n// export const getMe = async () => {\r\n//   const token = getAuthToken()\r\n//   return fetch(`${BASE_URL}/m1e`, {\r\n//     headers: {\r\n//       'authorization': `Bearer ${token}`\r\n//     }\r\n//   })\r\n//     .then((res) => {\r\n//       if (!res.ok) throw new Error('Network response was not ok in getMe.')\r\n//       return res.json()\r\n//     })\r\n//     .catch((error) => {\r\n//       return {\r\n//         ok: 0,\r\n//         data: error\r\n//       }\r\n//     })\r\n// }\r\n\r\nexport const getMe = async () => {\r\n  const token = getAuthToken()\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/me`, {\r\n      headers: {\r\n        'authorization': `Bearer ${token}`\r\n      }\r\n    })\r\n    if (!response.ok) throw new Error('Network response was not ok in getMe.')\r\n    const data = await response.json()\r\n    return data\r\n  } catch (error) {\r\n    return {\r\n      ok: 0,\r\n      data: error\r\n    }\r\n  }\r\n}\r\n","import { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { getPosts } from '../../WebAPI'\n\nconst Root = styled.div`\n  width: 50rem;\n  margin: 0 auto;\n`\n\nconst PostContainer = styled.article`\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\n  padding: 1rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n`\n\nconst PostTitle = styled(Link)`\n  font-size: 1.5rem;\n  color: #333;\n`\n\nconst PostDate = styled.p`\n  flex-shrink: 0;\n  color: rgba(0, 0, 0, 0.8);\n`\n\nconst Post = ({ post }) => {\n  const { title, createdAt } = post\n\n  return (\n    <PostContainer>\n      <PostTitle to={`/posts/${post.id}`}>{title}</PostTitle>\n      <PostDate>{new Date(createdAt).toLocaleString()}</PostDate>\n    </PostContainer>\n  )\n}\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    createdAt: PropTypes.number,\n    userId: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string\n    ]),\n    id: PropTypes.number\n  })\n}\n\nconst HomePage = () => {\n  const [posts, setPosts] = useState([])\n\n  useEffect(() => {\n    getPosts().then((posts) => {\n      setPosts(posts)\n    })\n  }, [])\n\n  return (\n    <Root>\n      {posts.map((post) => <Post key={post.id} post={post} />)}\n    </Root>\n  )\n}\n\nexport default HomePage;\n","import { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { useHistory } from 'react-router-dom'\nimport { login, getMe } from '../../WebAPI'\nimport { setAuthToken } from '../../utils'\nimport { AuthContext } from '../../contexts'\n\nconst ErrorMessage = styled.h2`\n  color: red;\n`\n\nconst LoginPage = () => {\n  const { setUser } = useContext(AuthContext)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [errorMessage, setErrorMessage] = useState('')\n  const history = useHistory()\n\n  const handleSubmit = async(e) => {\n    e.preventDefault()\n    setErrorMessage(null)\n\n    const loginResponse = await login(username, password)\n    const {  message, token } = loginResponse\n    if (!loginResponse.ok) {\n      setErrorMessage(message)\n      return\n    }\n    setAuthToken(token)\n\n    const getMeResponse = await getMe()\n    const { data } = getMeResponse\n    if (!getMeResponse.ok) {\n      setAuthToken(null)\n      setErrorMessage(data)\n      return\n    }\n    setUser(data)\n    history.push('/')\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        username: \n        <input value={username} onChange={(e) => setUsername(e.target.value)} />\n      </label>\n      <label>\n        password: \n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n      </label>\n      <button>登入</button>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n    </form>\n  )\n}\n\nexport default LoginPage;\n","import { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { getPost, getUser } from '../../WebAPI'\n\nconst PostContainer = styled.div`\n  width: 42.5rem;\n  margin: 0 auto;\n`\n\nconst Title = styled.h2`\n  border-bottom: 1px solid #333;\n  margin: 0;\n  padding: 1rem 0;\n  font-size: 3rem;\n  font-weight: 400;\n  line-height: 3.75rem;\n  color: #292929;\n`\n\nconst Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 1rem 0 ;\n`\n\nconst Author = styled.span``\n\nconst Time = styled.span``\n\nconst Content = styled.main``\n\nconst PostPage = () => {\n  const { id } = useParams()\n  const [post, setPost] = useState(null)\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    getPost(id).then((data) => {\n      setPost(data)\n    })\n  }, [id])\n\n  useEffect(() => {\n    if (!post) return\n    getUser(post.userId).then((data) => {\n      setUser(data)\n    })\n  }, [post])\n\n  return (\n    <>\n      {post && user && <PostContainer>\n          <div>\n            <Title>{post.title}</Title>\n            <Info>\n              <Author>{user && user.nickname}</Author>\n              <Time>{new Date(post.createdAt).toLocaleString()}</Time>\n            </Info>\n          </div>\n          <Content>{post.body}</Content>\n      </PostContainer>}\n    </>\n  )\n}\n\nexport default PostPage","import { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom'\nimport Header from './Header'\nimport HomePage from '../pages/HomePage'\nimport LoginPage from '../pages/LoginPage'\nimport PostPage from '../pages/PostPage'\nimport { AuthContext } from '../contexts'\nimport { getMe } from '../WebAPI'\nimport { getAuthToken } from '../utils'\n\nconst Root = styled.div`\n padding-top: 4rem;\n`\n\nfunction App() {\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    // todo: 有 token 才 call api\n    const token = getAuthToken()\n    if (!token) return\n    getMe().then((response) => {\n      const { ok, data } = response\n      if (!ok) {\n        console.log(data)\n        return\n      }\n      setUser(data)\n    })\n  }, [])\n\n  return (\n    <AuthContext.Provider value={{ user, setUser }}>\n      <Root>\n        <Router>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage />\n            </Route>\n            <Route path=\"/login\">\n              <LoginPage />\n            </Route>\n            <Route path=\"/posts/:id\">\n              <PostPage />\n            </Route>\n          </Switch>\n        </Router>\n      </Root>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}