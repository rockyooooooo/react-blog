{"version":3,"sources":["contexts.js","utils.js","components/Header/Header.js","components/Post.js","WebAPI.js","pages/HomePage/HomePage.js","pages/LoginPage/LoginPage.js","pages/PostPage/PostPage.js","pages/RegisterPage/RegisterPage.js","pages/NewPostPage/NewPostPage.js","pages/ListPage/Paginator.js","pages/ListPage/ListPage.js","pages/AboutPage/AboutPage.js","components/App.js","index.js"],"names":["AuthContext","createContext","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","HeaderContainer","styled","header","LeftContainer","div","Brand","h1","NavbarList","Nav","Link","props","$active","Header","useContext","user","setUser","location","useLocation","history","useHistory","to","pathname","onClick","push","PostContainer","article","PostTitle","PostDate","p","Post","post","title","createdAt","id","Date","toLocaleString","BASE_URL","POST_SORT","POST_ORDER","getPosts","a","fetch","response","json","data","getListPosts","page","getPost","getUser","userId","register","userData","username","password","nickname","method","headers","body","JSON","stringify","login","getMe","ok","Error","newPost","Root","HomePage","useState","posts","setPosts","useEffect","then","map","ErrorMessage","h2","LoginPage","setUsername","setPassword","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","loginResponse","message","getMeResponse","onSubmit","value","onChange","target","type","Title","Info","Author","span","Time","Content","main","PostPage","useParams","setPost","RegisterPage","setNickname","registerResponse","Form","form","input","TextArea","textarea","Button","button","NewPostPage","setTitle","content","setContent","htmlFor","name","PaginatorContainer","Paginator","setPage","lastPage","prev","ListPage","setLastPage","Math","ceil","length","Container","Description","AboutPage","App","console","log","Provider","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf135d23.chunk.js","sourcesContent":["import { createContext } from 'react'\r\n\r\nexport const AuthContext = createContext(null)","const TOKEN_NAME = 'token'\r\n\r\nexport const setAuthToken = (token) => localStorage.setItem(TOKEN_NAME, token)\r\nexport const getAuthToken = () => localStorage.getItem(TOKEN_NAME)","import styled from 'styled-components'\r\nimport { Link, useHistory, useLocation } from 'react-router-dom'\r\nimport { useContext } from 'react'\r\nimport { AuthContext } from '../../contexts'\r\nimport { setAuthToken } from '../../utils'\r\n\r\nconst HeaderContainer = styled.header`\r\n  background: white;\r\n  height: 4rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n  padding: 0 2rem;\r\n`\r\n\r\nconst LeftContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 4rem;\r\n`\r\n\r\nconst Brand = styled.h1``\r\n\r\nconst NavbarList = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 4rem;\r\n`\r\n\r\nconst Nav = styled(Link)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  width: 6rem;\r\n  cursor: pointer;\r\n  color: inherit;\r\n\r\n  background: ${(props) => props.$active ? '#75757575' : ''}\r\n`\r\n\r\nconst Header = () => {\r\n  const { user, setUser } = useContext(AuthContext)\r\n  const location = useLocation()\r\n  const history = useHistory()\r\n\r\n  const handleLogout = () => {\r\n    setAuthToken(null)\r\n    setUser(null)\r\n    if (location.pathname !== '/') {\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      <LeftContainer>\r\n        <Brand>Large</Brand>\r\n        <NavbarList>\r\n          <Nav to=\"/\" $active={location.pathname === '/'}>首頁</Nav>\r\n          <Nav to=\"/list\" $active={location.pathname === '/list'}>文章列表</Nav>\r\n          {user && <Nav to=\"/new\" $active={location.pathname === '/new'}>發布文章</Nav>}\r\n          <Nav to=\"/about\" $active={location.pathname === '/about'}>About</Nav>\r\n        </NavbarList>\r\n      </LeftContainer>\r\n      <NavbarList>\r\n        {\r\n          user ?\r\n          <Nav to=\"/\" onClick={handleLogout}>登出</Nav> : \r\n          (<>\r\n            <Nav to=\"/register\" $active={location.pathname === '/register'}>註冊</Nav>\r\n            <Nav to=\"/login\" $active={location.pathname === '/login'}>登入</Nav>\r\n          </>)\r\n        }\r\n      </NavbarList>\r\n    </HeaderContainer>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst PostContainer = styled.article`\r\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\r\n  padding: 1rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n`\r\n\r\nconst PostTitle = styled(Link)`\r\n  font-size: 1.5rem;\r\n  color: #333;\r\n`\r\n\r\nconst PostDate = styled.p`\r\n  flex-shrink: 0;\r\n  color: #757575;\r\n`\r\n\r\nconst Post = ({ post }) => {\r\n  const { title, createdAt } = post\r\n\r\n  return (\r\n    <PostContainer>\r\n      <PostTitle to={`/posts/${post.id}`}>{title}</PostTitle>\r\n      <PostDate>{new Date(createdAt).toLocaleString()}</PostDate>\r\n    </PostContainer>\r\n  )\r\n}\r\n\r\nPost.propTypes = {\r\n  post: PropTypes.shape({\r\n    title: PropTypes.string,\r\n    body: PropTypes.string,\r\n    createdAt: PropTypes.number,\r\n    userId: PropTypes.oneOfType([\r\n      PropTypes.number,\r\n      PropTypes.string\r\n    ]),\r\n    id: PropTypes.number\r\n  })\r\n}\r\n\r\nexport default Post","import { getAuthToken } from \"./utils\"\r\nconst BASE_URL = 'https://student-json-api.lidemy.me'\r\nconst POST_LIMIT = 5\r\nconst POST_SORT = 'createdAt'\r\nconst POST_ORDER = 'desc'\r\n\r\nexport const getPosts = async() => {\r\n  const response = await fetch(`${BASE_URL}/posts?_sort=${POST_SORT}&_order=${POST_ORDER}`)\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getListPosts = async(page) => {\r\n  const response = await fetch(`${BASE_URL}/posts?_page=${page}&_limit=${POST_LIMIT}&_sort=${POST_SORT}&_order=${POST_ORDER}`)\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getPost = async(id) => {\r\n  const response = await fetch(`${BASE_URL}/posts/${id}`)\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getUser = async(userId) => {\r\n  const response = await fetch(`${BASE_URL}/users/${userId}`)\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const register = async(userData) => {\r\n  const { username, password, nickname } = userData\r\n  const response = await fetch(`${BASE_URL}/register`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      nickname,\r\n      username,\r\n      password\r\n    })\r\n  })\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const login = async (username, password) => {\r\n  const response = await fetch(`${BASE_URL}/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password\r\n    })\r\n  })\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\n// export const getMe = async () => {\r\n//   const token = getAuthToken()\r\n//   return fetch(`${BASE_URL}/m1e`, {\r\n//     headers: {\r\n//       'authorization': `Bearer ${token}`\r\n//     }\r\n//   })\r\n//     .then((res) => {\r\n//       if (!res.ok) throw new Error('Network response was not ok in getMe.')\r\n//       return res.json()\r\n//     })\r\n//     .catch((error) => {\r\n//       return {\r\n//         ok: 0,\r\n//         data: error\r\n//       }\r\n//     })\r\n// }\r\n\r\nexport const getMe = async () => {\r\n  const token = getAuthToken()\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/me`, {\r\n      headers: {\r\n        'authorization': `Bearer ${token}`\r\n      }\r\n    })\r\n    if (!response.ok) throw new Error('Network response was not ok in getMe.')\r\n    const data = await response.json()\r\n    return data\r\n  } catch (error) {\r\n    return {\r\n      ok: 0,\r\n      data: error\r\n    }\r\n  }\r\n}\r\n\r\nexport const newPost = async (title, body) => {\r\n  const token = getAuthToken()\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/posts`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n        'authorization': `Bearer ${token}`\r\n      },\r\n      body: JSON.stringify({\r\n        title,\r\n        body\r\n      })\r\n    })\r\n    if (!response.ok) throw new Error('Network response was not ok in newPost.')\r\n    const data = await response.json()\r\n    return data\r\n  } catch (error) {\r\n    return {\r\n      ok: 0,\r\n      data: error\r\n    }\r\n  }\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Post from '../../components/Post'\r\nimport { getPosts } from '../../WebAPI'\r\n\r\nconst Root = styled.div`\r\n  width: 50rem;\r\n  margin: 0 auto;\r\n`\r\n\r\nconst HomePage = () => {\r\n  const [posts, setPosts] = useState([])\r\n\r\n  useEffect(() => {\r\n    getPosts().then((posts) => {\r\n      setPosts(posts)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <Root>\r\n      {posts.map((post) => <Post key={post.id} post={post} />)}\r\n    </Root>\r\n  )\r\n}\r\n\r\nexport default HomePage;\r\n","import { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { login, getMe } from '../../WebAPI'\r\nimport { setAuthToken } from '../../utils'\r\nimport { AuthContext } from '../../contexts'\r\n\r\nconst ErrorMessage = styled.h2`\r\n  color: red;\r\n`\r\n\r\nconst LoginPage = () => {\r\n  const { setUser } = useContext(AuthContext)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const history = useHistory()\r\n\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault()\r\n    setErrorMessage(null)\r\n\r\n    const loginResponse = await login(username, password)\r\n    const {  message, token } = loginResponse\r\n    if (!loginResponse.ok) {\r\n      setErrorMessage(message)\r\n      return\r\n    }\r\n    setAuthToken(token)\r\n\r\n    const getMeResponse = await getMe()\r\n    const { data } = getMeResponse\r\n    if (!getMeResponse.ok) {\r\n      setAuthToken(null)\r\n      setErrorMessage(data)\r\n      return\r\n    }\r\n    setUser(data)\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>登入</h2>\r\n      <label>\r\n        username: \r\n        <input value={username} onChange={(e) => setUsername(e.target.value)} />\r\n      </label>\r\n      <label>\r\n        password: \r\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n      </label>\r\n      <button>登入</button>\r\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default LoginPage;\r\n","import { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { getPost, getUser } from '../../WebAPI'\r\n\r\nconst PostContainer = styled.div`\r\n  width: 42.5rem;\r\n  margin: 0 auto;\r\n`\r\n\r\nconst Title = styled.h2`\r\n  border-bottom: 1px solid #333;\r\n  margin: 0;\r\n  padding: 1rem 0;\r\n  font-size: 3rem;\r\n  font-weight: 400;\r\n  line-height: 3.75rem;\r\n  color: #292929;\r\n`\r\n\r\nconst Info = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1rem 0 ;\r\n`\r\n\r\nconst Author = styled.span``\r\n\r\nconst Time = styled.span`\r\n  color: #757575;\r\n`\r\n\r\nconst Content = styled.main`\r\n  white-space: pre-wrap;\r\n  margin-bottom: 4rem;\r\n`\r\n\r\nconst PostPage = () => {\r\n  const { id } = useParams()\r\n  const [post, setPost] = useState(null)\r\n  const [user, setUser] = useState(null)\r\n\r\n  useEffect(() => {\r\n    getPost(id).then((data) => {\r\n      setPost(data)\r\n    })\r\n  }, [id])\r\n\r\n  useEffect(() => {\r\n    if (!post) return\r\n    getUser(post.userId).then((data) => {\r\n      setUser(data)\r\n    })\r\n  }, [post])\r\n\r\n  return (\r\n    <>\r\n      {post && user && <PostContainer>\r\n          <Title>{post.title}</Title>\r\n          <Info>\r\n            <Author>{user && user.nickname}</Author>\r\n            <Time>{new Date(post.createdAt).toLocaleString()}</Time>\r\n          </Info>\r\n          <Content>{post.body}</Content>\r\n      </PostContainer>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PostPage","import { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { register, getMe } from '../../WebAPI'\r\nimport { setAuthToken } from '../../utils'\r\nimport { AuthContext } from '../../contexts'\r\n\r\nconst ErrorMessage = styled.h2`\r\n  color: red;\r\n`\r\n\r\nconst RegisterPage = () => {\r\n  const { setUser } = useContext(AuthContext)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [nickname, setNickname] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const history = useHistory()\r\n\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault()\r\n    setErrorMessage(null)\r\n\r\n    const registerResponse = await register({username, password, nickname})\r\n    const {  message, token } = registerResponse\r\n    if (!registerResponse.ok) {\r\n      setErrorMessage(message)\r\n      return\r\n    }\r\n    setAuthToken(token)\r\n\r\n    const getMeResponse = await getMe()\r\n    const { data } = getMeResponse\r\n    if (!getMeResponse.ok) {\r\n      setAuthToken(null)\r\n      setErrorMessage(data)\r\n      return\r\n    }\r\n    setUser(data)\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>註冊</h2>\r\n      <label>\r\n        username: \r\n        <input value={username} onChange={(e) => setUsername(e.target.value)} />\r\n      </label>\r\n      <label>\r\n        password: \r\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n      </label>\r\n      <label>\r\n        nickname: \r\n        <input value={nickname} onChange={(e) => setNickname(e.target.value)} />\r\n      </label>\r\n      <button>註冊</button>\r\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default RegisterPage;\r\n","import { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport styled from \"styled-components\"\r\nimport { newPost } from \"../../WebAPI\"\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n  height: calc(100vh - 4rem);\r\n  width: 50vw;\r\n  margin: 4rem auto;\r\n`\r\n\r\nconst Title = styled.input`\r\n  padding: 0.5rem;\r\n  font-family: inherit;\r\n  font-size: 1.25rem;\r\n`\r\n\r\nconst TextArea = styled.textarea`\r\n  resize: vertical;\r\n  padding: 0.5rem;\r\n  font-family: inherit;\r\n  font-size: 1rem;\r\n  height: 10rem;\r\n`\r\n\r\nconst Button = styled.button`\r\n  font-size: 1rem;\r\n  padding: 0.5rem;\r\n  margin-top: 1rem;\r\n`\r\n\r\nconst NewPostPage = () => {\r\n  const [title, setTitle] = useState('')\r\n  const [content, setContent] = useState('')\r\n    const history = useHistory()\r\n\r\n  const handleInputChange = (e) => {\r\n    setTitle(e.target.value)\r\n  }\r\n\r\n  const handleTextareaChange = (e) => {\r\n    setContent(e.target.value)\r\n  }\r\n\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault()\r\n    await newPost(title, content)\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"title\">文章標題：</label>\r\n      <Title type=\"text\" id=\"title\" name=\"content\" value={title} onChange={handleInputChange} />\r\n      <label htmlFor=\"content\">文章內容：</label>\r\n      <TextArea id=\"content\" name=\"content\" value={content} onChange={handleTextareaChange} />\r\n      <Button>送出文章</Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default NewPostPage","import styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst PaginatorContainer = styled.div`\r\n  display: block;\r\n  text-align: center;\r\n`\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  padding: 1rem;\r\n  font-family: inherit;\r\n  width: 4rem;\r\n  cursor: ${(props) => props.$active && \"pointer;\"};\r\n  transition: background 300ms ease;\r\n\r\n  &:hover {\r\n    background: ${(props) => props.$active && \"#75757575;\"}\r\n  }\r\n`\r\n\r\nconst Paginator = ({ page, setPage, lastPage }) => {\r\n  return (\r\n    <PaginatorContainer>\r\n      {\r\n        page > 1 ?\r\n        <>\r\n          <Button $active={true} onClick={() => setPage(1)}>First</Button>\r\n          <Button $active={true} onClick={() => setPage((prev) => prev - 1)}>Prev</Button>\r\n        </> :\r\n        <>\r\n          <Button $active={false} />\r\n          <Button $active={false} />\r\n        </>\r\n      }\r\n      {\r\n        page < lastPage ? \r\n        <>\r\n          <Button $active={true} onClick={() => setPage((prev) => prev + 1)}>Next</Button>\r\n          <Button $active={true} onClick={() => setPage(lastPage)}>Last</Button>\r\n        </> :\r\n        <>\r\n          <Button $active={false} />\r\n          <Button $active={false} />\r\n        </>\r\n      }\r\n    </PaginatorContainer>\r\n  )\r\n}\r\n\r\nPaginator.propTypes = {\r\n  page:PropTypes.number,\r\n  setPage: PropTypes.func,\r\n  lastPage: PropTypes.number\r\n}\r\n\r\nexport default Paginator","import { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Post from '../../components/Post'\r\nimport { getListPosts, getPosts } from '../../WebAPI'\r\nimport Paginator from './Paginator'\r\n\r\nconst Root = styled.div`\r\n  width: 50rem;\r\n  margin: 0 auto;\r\n`\r\n\r\nconst ListPage = () => {\r\n  const [posts, setPosts] = useState([])\r\n  const [page, setPage] = useState(1)\r\n  const [lastPage, setLastPage] = useState(1)\r\n\r\n  useEffect(() => {\r\n    getPosts().then((posts) => {\r\n      setLastPage(Math.ceil(posts.length / 5))\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getListPosts(page).then((posts) => {\r\n      setPosts(posts)\r\n    })\r\n  }, [page])\r\n\r\n  return (\r\n    <Root>\r\n      {posts.map((post) => <Post key={post.id} post={post} />)}\r\n      <Paginator page={page} setPage={setPage} lastPage={lastPage} />\r\n    </Root>\r\n  )\r\n}\r\n\r\nexport default ListPage;\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: calc(100vh - 4rem);\r\n`\r\n\r\nconst Title = styled.h2`\r\n  font-size: 3rem;\r\n`\r\n\r\nconst Description = styled.p`\r\n  font-size: 0.8rem;\r\n  color: #757575;\r\n`\r\n\r\nconst AboutPage = () => {\r\n  return (\r\n    <Container>\r\n      <Title>Large</Title>\r\n      <Description>一個想假裝自己是 Medium 的部落格</Description>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default AboutPage;\r\n","import { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route\r\n} from 'react-router-dom'\r\nimport Header from './Header'\r\nimport HomePage from '../pages/HomePage'\r\nimport LoginPage from '../pages/LoginPage'\r\nimport PostPage from '../pages/PostPage'\r\nimport RegisterPage from '../pages/RegisterPage/RegisterPage'\r\nimport NewPostPage from '../pages/NewPostPage'\r\nimport ListPage from '../pages/ListPage'\r\nimport { AuthContext } from '../contexts'\r\nimport { getMe } from '../WebAPI'\r\nimport { getAuthToken } from '../utils'\r\nimport AboutPage from '../pages/AboutPage'\r\n\r\nconst Root = styled.div`\r\n padding-top: 4rem;\r\n`\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(null)\r\n\r\n  useEffect(() => {\r\n    // todo: 有 token 才 call api\r\n    const token = getAuthToken()\r\n    if (!token) return\r\n    getMe().then((response) => {\r\n      const { ok, data } = response\r\n      if (!ok) {\r\n        console.log(data)\r\n        return\r\n      }\r\n      setUser(data)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, setUser }}>\r\n      <Root>\r\n        <Router>\r\n          <Header />\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <HomePage />\r\n            </Route>\r\n            <Route exact path=\"/list\">\r\n              <ListPage />\r\n            </Route>\r\n            <Route path=\"/new\">\r\n              <NewPostPage />\r\n            </Route>\r\n            <Route path=\"/about\">\r\n              <AboutPage />\r\n            </Route>\r\n            <Route path=\"/login\">\r\n              <LoginPage />\r\n            </Route>\r\n            <Route path=\"/register\">\r\n              <RegisterPage />\r\n            </Route>\r\n            <Route path=\"/posts/:id\">\r\n              <PostPage />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </Root>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}